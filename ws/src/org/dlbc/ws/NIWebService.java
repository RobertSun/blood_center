
package org.dlbc.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.1-02/02/2007 03:56 AM(vivekp)-FCS
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "NIWebService", targetNamespace = "http://tempuri.org/", wsdlLocation = "file:///home/echo/Workspaces/blood/docs/Shinow.wsdl")
public class NIWebService
    extends Service
{

    private final static URL NIWEBSERVICE_WSDL_LOCATION;

    static {
        URL url = null;
        try {
//            url = new URL("file:/home/echo/Workspaces/blood/docs/Shinow.wsdl");
//            for test url
            url = new URL("http://192.168.0.55/NI/NIWebService.asmx?wsdl");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        NIWEBSERVICE_WSDL_LOCATION = url;
    }

    public NIWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NIWebService() {
        super(NIWEBSERVICE_WSDL_LOCATION, new QName("http://tempuri.org/", "NIWebService"));
    }

    /**
     * 
     * @return
     *     returns NIWebServiceSoap
     */
    @WebEndpoint(name = "NIWebServiceSoap")
    public NIWebServiceSoap getNIWebServiceSoap() {
        return (NIWebServiceSoap)super.getPort(new QName("http://tempuri.org/", "NIWebServiceSoap"), NIWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NIWebServiceSoap
     */
    @WebEndpoint(name = "NIWebServiceSoap")
    public NIWebServiceSoap getNIWebServiceSoap(WebServiceFeature... features) {
        return (NIWebServiceSoap)super.getPort(new QName("http://tempuri.org/", "NIWebServiceSoap"), NIWebServiceSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns NIWebServiceSoap
     */
    @WebEndpoint(name = "NIWebServiceSoap12")
    public NIWebServiceSoap getNIWebServiceSoap12() {
        return (NIWebServiceSoap)super.getPort(new QName("http://tempuri.org/", "NIWebServiceSoap12"), NIWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NIWebServiceSoap
     */
    @WebEndpoint(name = "NIWebServiceSoap12")
    public NIWebServiceSoap getNIWebServiceSoap12(WebServiceFeature... features) {
        return (NIWebServiceSoap)super.getPort(new QName("http://tempuri.org/", "NIWebServiceSoap12"), NIWebServiceSoap.class, features);
    }

}
